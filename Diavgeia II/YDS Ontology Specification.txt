Transforming the Diavgeia II dataset into RDF        The aim of this document is to provide the reader with an overview of the proposed ontology for the description of economic data, the reasons that lead to the adopted architecture and a detailed description of the transformation of data retrieved from the Diavgeia II API to their respective RDF format. It should be noted that, as the Diavgeia II API is continuously improved, some of the presented architectural structures may be slightly altered in order to be in accordance with the API.    Table of ContentsMethodology	3Vocabularies and Ontologies used	3Description and selection reasons	3Metadata Mapping	41.	Organization	52.	Category of Organization	63.	Status of Organization	64.	Domain of responsibility of Organization	75.	Organization Unit	76.	Category of Organization Unit	87.	Greek Government Gazette Issue Types	88.	Greek Government Gazette Issues	89.	Signer	910.	Signer Position	1011.	Thematic Category	1012.	Decisions (Core Elements)	1013.	Decision Status	1214.	Currency	1215.	VAT Id Type	1216.	Countries	1317.	Attachments	1318.	Budget Category	1419.	Procedure Contract Type	1420.	Kind of Contracts	1521.	Award Criterion	1522.	CPVs	1523.	Address details	1624.	Decision Type B.1.3	1625.	Decision Type B.2.1	1826.	Decision Type B.2.2	2027.	Decision Type Δ.1	2028.	Decision Type Δ.2.1	2129.	Decision Type Δ.2.2	2330.	Related Decisions	23The OWL model	241.	Classes	252.	Object Properties	263.	Datatype Properties	29    
Methodology    The Diavgeia II API provides access to a very rich dataset with a large number of interconnected entities, taking part in all aspects of economic activity in Greece and covering all stages of public sector cash flow: from budgeting to contract formation and finally, to actual spending. The modeling of Diavgeia II follows a structured methodology by taking into account all API calls and transforming the respective responses in appropriate RDF graphs that reuse as much as possible terms from well-known relevant domain ontologies. The modeling phase of the overall transformation process reveals the parts of the economic cycle that are inadequately covered by current state-of-the-art ontologies and therefore, serves as a guide for the concepts and relationships that need to be defined in our ontology.Vocabularies and Ontologies used    Once the data is fetched from the API the appropriate RDF models are created by using the proposed ontology. During the ontology design phase, our aim was to reuse other well-known dictionaries and ontologies that cover our needs. In cases that existing models were insufficient or new domains had to be described, new concepts were defined. The most important ontologies and vocabularies that were considered are the following: FOAF1, GoodRelations2, Public Contracts3, Organization Ontology4, Registered Organization Vocabulary5, Dublin Core6 and SKOS7.Description and selection reasons        FOAF, which is an acronym of Friend of a Friend, is an ontology for describing persons, their activities and their relations to other people and objects. This concept can be generalized as to describe all type of entities, called agents, who are responsible for specific actions. FOAF is meant to describe the world using simple ideas inspired by the Web.    In our context this ontology is used in order to define and describe the agents who are responsible for the actions defined in the context. The two specific categories of agents used are Persons and Organizations.        GoodRelations is an ontology which aims in defining a data structure for e-commerce that is related to products, prices, stores and company data. Its use enables the expression of commercial and functional details of e-commerce scenarios. The main entities in that domain are the involved agents, in terms of persons or organizations, objects involved in a commercial action, offers to sell, repair, lease something, or to express interest in such an offer, and the locations from which the offer is available.    In our context this ontology is used in order to define and describe the organizations, named business entities, involved in the commercial action (their legal names and their VAT number), as well as the economic details of a contract or a payment (the price, whether the tax is included in the price, and the currency that the price is expressed to).        The Organization Ontology is used for describing organizational structures, aimed at supporting linked data publishing of organizational information across a number of domains. It is designed to allow domain-specific extensions to add classification of organizations and roles, as well as extensions to support related information such as organizational activities. Its design enables the publication of information on organizations and organizational structures including governmental ones.    In our context this ontology is used in order to define and describe the organizations and the organization units. Their structure is represented using the properties of the ontology. Moreover properties are also provided for the depiction of the memberships and the reporting structures within an organization as well as the roles, posts, and the relationship between people and organizations.        The Registered Organization Vocabulary is a profile of the Organization Ontology for describing organizations that have gained legal entity status through a formal registration process, typically in a national or regional register. It includes a minimal number of classes and properties that are designed to capture the typical details recorded by business registers and thereby facilitate information exchange between them, although there is significant variation between business registers in what they record and publish.    In our context this ontology is used in order to define and describe the organizations and their properties, including their type, status and activity.        Public Contracts is an ontology which aims in describing contracts in the public sector. It is based on the GoodRelations ontology for the modeling of business entities and price specifications.    In our context this ontology is used in order to define and describe the following:• the public contract during all stages of its existence, • the procedure which determines how information about a contract is published and how a supplier is chosen, • the main subject of a contract (e.g. works, supplies or services),• the price of the contract depending on its phase (before or after the tender),• the award criteria which specify conditions under which the best tender will be selected and awarded as well as their weights, and• the main and the additional products or services purchased by a contract (specified by the CPVs).    Dublin Core is a light weight vocabulary for describing generic metadata of web and physical resources. In our context it is used in order to define the entities responsible for making a Contract available, the subject of the Contracts, and the date of their formal issue.        SKOS, which is an acronym of Simple Knowledge Organization System, is an RDF vocabulary designed for representation of thesauri, classification schemes, taxonomies, subject heading lists or any other type of structured controlled vocabulary. Its main objective is to enable easy publication and use of such vocabularies as linked data. In our context it is used in order to define the controlled vocabularies specified by the context.Metadata Mapping    In this section the mapping of the information retrieved from the Diavgeia II API into the respective RDF model is presented. The presentation is structured as follows: the response of a specific entity as retrieved from the Diavgeia II API is displayed, then its transformation into the respective RDF format (provided in Turtle notation) is presented, and finally the descriptions of the models are provided.    In the RDF representation some specific namespaces are used. The “gr” one corresponds to the GoodRelations ontology, “pc” to the PublicContracts, “skos” to the SKOS vocabulary, “org” to the Organization ontology, “rov” to the Registered Organization vocabulary and “foaf” to the FOAF ontology. The “elod” prefix (economic Linked Open Data) corresponds to our proposed ontology.    1. OrganizationAPI call: https://diavgeia.gov.gr/luminapi/opendata/organizations/99222001XML response:<organization><uid>99222001</uid><label>ΠΕΡ.ΓΕΝ. ΝΟΣΟΚΟΜΕΙΟ ΙΩΑΝ.'Γ.ΧΑΤΖΗΚΩΣΤΑ'</label><abbreviation/><latinName>gni_ghatzikosta</latinName><status>active</status><category>NPDD</category><vatNumber>998980227</vatNumber><fekNumber>3286</fekNumber><fekIssue>fektype_B</fekIssue><fekYear>2012</fekYear><odeManagerEmail>pliroforiki@gni-hatzikosta.gr</odeManagerEmail><website>http://www.gni-hatzikosta.gr</website><supervisorId>20</supervisorId><supervisorLabel>ΥΠΟΥΡΓΕΙΟ ΥΓΕΙΑΣ & ΚΟΙΝΩΝΙΚΗΣ ΑΛΛΗΛΕΓΓΥΗΣ </supervisorLabel><organizationDomains><organizationDomain>Hospitalization</organizationDomain></organizationDomains></organization>    Corresponding RDF graph:<http://linkedeconomy.org/resource/Organization/998980227/99222001> a foaf:Organization, gr:BusinessEntity, org:Organization, rov:RegisteredOrganization;    gr:name “ΠΕΡ.ΓΕΝ. ΝΟΣΟΚΟΜΕΙΟ ΙΩΑΝ.'Γ.ΧΑΤΖΗΚΩΣΤΑ'”@el;elod:organizationId “99222001”;(elod:abbreviation ) when applicablerdfs:label “gni_ghatzikosta”@en;rov:orgStatus http://linkedeconomy.org/resource/OrganizationStatus/Active;rov:orgCategory http://linkedeconomy.org/resource/OrganizationCategory/NPDD;gr:vatID “998980227”;elod:relatedFek <http://linkedeconomy.org/resource/Fek/fektype_B/2012/3286>;elod:website “http://www.gni-hatzikosta.gr”;elod:odeManagerEmail “pliroforiki@gni-hatzikosta.gr”;elod:hasSupervisorOrganization <http://linkedeconomy.org/resource/Organization/099017070>; rov:orgActivity http://linkedeconomy.org/resource/OrganizationDomain/PublicSecuriryCivilRights;gr:legalName "ΠΕΡ.ΓΕΝ. ΝΟΣΟΚΟΜΕΙΟ ΙΩΑΝ.'Γ.ΧΑΤΖΗΚΩΣΤΑ'"@el;elod:hasVatType <http://linkedeconomy.org/resource/VatType/EL>;elod:isRegisteredAt <http://linkedeconomy.org/resource/Country/EL>;elod:validVatId “true”;    vcard:hasAddress http://linkedeconomy.org/resource/Address/049325862.        As already mentioned, well-known ontologies and vocabularies are used. Therefore, in order to cover all possible aspects, entities representing “Organizations” are created by using all the corresponding classes from these ontologies (foaf:Organization,  gr:BusinessEntity, org:Organization, and rov:RegisteredOrganization).    The URI of the organization entities is in the following two forms: A) either service_prefix/Organization/{vat_id} or B) service_prefix/Organization/{vat_id}/{org_id} in case that it is supervised by another organization (presented case). The modeling of the data retrieved from the “category”, “status” and “organizationDomains” elements are analyzed in 2, 3 and 4 respectively.    When information about the hierarchy of the organization is provided (“supervisorId” element) that relation is depicted in the corresponding RDF model. The examined organization is related to its supervisor or supervising organization.    The organizations provide information about their related Greek Government Gazette issues. Therefore a new resource representing the Greek Government Gazette issues is created (see 7) and is connected with that organization.    When a vat id is encountered a specific process is followed; it is validated against a service (http://vatid.eu). Depending on its validity and whether it refers to a Physical Person or to a Legal Entity more information can be found including its validity, legal name, vat id type (see 15), registration country (see 16) and address. The last properties are used for modeling that kind of information.    2. Category of OrganizationAPI call: https://diavgeia.gov.gr/luminapi/opendata/dictionaries/ORG_CATEGORYSample XML response:<item uid="NPDD" label="ΝΠΔΔ"/>    Corresponding RDF graph:<http://linkedeconomy.org/resource/OrganizationCategory/NPDD> a skos:Concept, elod:OrganizationCategory;    skos:prefLabel “NPDD”@en;    skos:prefLabel “ΝΠΔΔ”@el.	    The modeling of the “Category of Organization” is based on the Concepts introduced by the SKOS vocabulary. A Concept is created for each category of the organizations. Then we specify these to belong to another class, named OrganizationCategory. Also, the name of the represented concept is attached along with its language specification. Every time such a category is needed, its respective Concept will be used.3. Status of Organization        There is no API call for this entity. There are only three possible values: Active, Inactive, and Pending.    Corresponding RDF graph:<http://linkedeconomy.org/resource/OrganizationStatus/Active> a skos:Concept, elod:OrganizationStatus;    skos:prefLabel “Active and registered in Di@vgeia”@en;    skos:prefLabel “Ενεργός και ενταγμένος στη Δι@ύγεια”@el.    The modeling of the “Status of Organization” is based on the Concepts introduced by the SKOS vocabulary. A Concept is created for each organization status type. Then we specify these to belong to another class, named OrganizationStatus. Also, the name of the represented concept is attached along with its language specification. Every time such a status is needed, its respective Concept will be used.4. Domain of responsibility of OrganizationAPI call: https://diavgeia.gov.gr/luminapi/opendata/dictionaries/ORG_DOMAINSample XML response:<item uid="Hospitalization" label="Νοσηλεία" parent="HealthNutrition"/>    Corresponding RDF graph:<http://linkedeconomy.org/resource/OrganizationDomain/Hospitalization> a skos:Concept, elod:OrganizationDomain;       skos:prefLabel “Hospitalization”@el       skos:prefLabel “Νοσηλεία”@el;       skos:broader <http://linkedeconomy.org/resource/OrganizationDomain/HealthNutrition>.    The modeling of the “Domain of responsibility of Organizations” is based on the Concepts introduced by the SKOS vocabulary. A Concept is created for each domain of responsibility. Then we specify these to belong to another class, named OrganizationDomain. Also, the name of the represented concept is attached along with its language specification. Every time such a domain is needed, its respective Concept will be used. Some of these domains may be expanding or specifying others (as in the presented case).5. Organization UnitAPI call: https://diavgeia.gov.gr/luminapi/opendata/units/73763XML response:<unit>   <uid>73763</uid>   <label>ΔΙΟΙΚΗΤΗΣ</label>   <abbreviation/>   <category>DIOIKISI</category>   <unitDomains/>   <parentId>99222001</parentId></unit>Corresponding RDF graph:<http://linkedeconomy.org/resource/OrganizationUnit/73763> a org:OrganizationalUnit;    rdfs:label “ΔΙΟΙΚΗΤΗΣ”@el;    (elod:abbreviation ) when applicableelod:organizationUnitType <http://linkedeconomy.org/resource/OrganizationCategory/DIOIKISI>;    (rov:orgActivity) when applicable    (elod:isActive xsd:Boolean) when applicable        org:unitOf <http://linkedeconomy.org/resource/Organization/99222001>;       The organization units are created using the class org:OrganizationalUnit. Their URI is in the following form: service_prefix/OrganizationalUnit/{orgUnit_id}. The modeling of the data retrieved from the “category” and “unitDomains” elements are analyzed in 6 and 4 respectively.    When information about the hierarchy of the organization unit is provided (“parentId” element) that relation is depicted in the corresponding RDF model. The examined organization unit is related to its supervisor organization.6. Category of Organization UnitAPI call: https://diavgeia.gov.gr/luminapi/opendata/dictionaries/ORG_UNIT_CATEGORYSample XML response:<item uid="DEPARTMENT" label="Τμήμα"/>Corresponding RDF graph:<http://linkedeconomy.org/resource/OrganizationalUnitCategory/DEPARTMENT> a skos:Concept, elod:OrganizationalUnitCategory;    skos:prefLabel “Department”@en    skos:prefLabel “Τμήμα”@el.    The modeling of the “Category of Organization Unit” is based on the Concepts introduced by the SKOS vocabulary. A Concept is created for each category of the units. Then we specify these to belong to another class, named OrganizationalUnitCategory. Also, the name of the represented concept is attached along with its language specification. Every time such a category is needed, its respective Concept will be used.7. Greek Government Gazette Issue TypesAPI call: https://diavgeia.gov.gr/luminapi/opendata/dictionaries/FEKTYPESSample XML response:<item uid="fektype_D" label="(Δ) - Τεύχος Τέταρτο"/>Corresponding RDF graph:<http://linkedeconomy.org/resource/FekType/fektype_D> a skos:Concept, elod:FekType;      skos:prefLabel “(Δ) - Τεύχος Τέταρτο”@el;      elod:fekTypeId “fektype_D”.    The modeling of the “Greek Government Gazette Issue Types” is based on the Concepts introduced by the SKOS vocabulary. A Concept is created for each organization status type. Then we specify these to belong to another class, named FekType. Also, the name of the represented concept is attached along with its language specification. Every time such a type is needed, its respective Concept will be used.8. Greek Government Gazette Issues        There is no API call for this entity. All related information is assembled from other entities (e.g. Organizations).Part of XML response:<fekNumber>3286</fekNumber><fekIssue>fektype_B</fekIssue><fekYear>2012</fekYear>Corresponding RDF graph:<http://linkedeconomy.org/resource/Fek/fektype_B/2012/3286> a elod:Fek;    elod:fekNumber “3286”;    elod:fekIssue <http://linkedeconomy.org/resource/FekType/fektype_B>;    elod:fekYear “2012”.    The Greek Government Gazette Issues are created using the class elod:Fek. Their URI is in the following form: service_prefix/Fek/{fekIssue}/{fekYear}/{fekNumber}. Each Fek is related to an Organization (see 1).9. SignerAPI Call: https://diavgeia.gov.gr/luminapi/opendata/signers/103779XML Response: <signer>    <uid>103779</uid>    <firstName>ΙΩΑΝΝΗΣ</firstName>    <lastName>ΜΠΟΥΚΑΣ</lastName>    <active>true</active>    <organizationId>99222001</organizationId>    <hasOrganizationSignRights>true</hasOrganizationSignRights>    <units>    <unit>    <positionId>POS_10012</positionId>    <positionLabel>Αναπληρωτής Διευθυντής</positionLabel>       <uid>99222001</uid>       </unit>    </units></signer>Corresponding RDF graph:<http://linkedeconomy.org/resource/Signer/103779> a foaf:Person;    elod:signerId “103779”;    foaf:firstName “ΙΩΑΝΝΗΣ”@el;    foaf:lastName “ΜΠΟΥΚΑΣ”@el    elod:signerActive “true”;    elod:hasOrganizationSignRights “true”;org:hasMember <http://linkedeconomy.org/resource/Membership/103779_position>;org:hasMember <http://linkedeconomy.org/resource/Membership/103779_sign>;    The Signers are created as instances of the class foaf:Person. Their URI is in the following form: service_prefix/Signer/{signerId}. Each Signer belongs to an Organization (see 1) and holds a Position (see 10) which are modeled using the property org:hasMember once for each of them. If the value of the element “hasOrganizationSignRights” is false then the element “unitIds” will contain the Organization Unit(s) (see 5) that this person has signing rights. Otherwise it will contain an Organization.10. Signer PositionAPI call: https://diavgeia.gov.gr/luminapi/opendata/positionsSample XML response:<position>    <label>Αναπληρωτής Πρόεδρος</label>    <uid>POS_10082</uid></position>Corresponding RDF graph:<http://linkedeconomy.org/resource/Role/POS_10082> a skos:Concept, org:Role;    skos:prefLabel “Αναπληρωτής Πρόεδρος”@el.    The modeling of the “Signer Position” is based on the Concepts introduced by the SKOS vocabulary. A Concept is created for each position. Then we specify these to belong to another class,, named Role. Also, the name of the represented concept is attached along with its language specification. Every time such a position is needed, its respective Concept will be used.11. Thematic CategoryAPI call: https://diavgeia.gov.gr/luminapi/opendata/dictionaries/THKPart of XML response:<item uid="52" label="ΠΕΡΙΒΑΛΛΟΝ"/>Corresponding RDF graph:<http://linkedeconomy.org/resource/ThematicCategory/52> a skos:Concept, elod:ThematicCategory;    skos:prefLabel “ΠΕΡΙΒΑΛΛΟΝ”@el.        The modeling of the “Thematic Category of Organization” is based on the Concepts introduced by the SKOS vocabulary. A Concept is created for each thematic category. Then we specify these to belong to another class,, named ThematicCategory. Also, the name of the represented concept is attached along with its language specification. Every time such a category is needed, its respective Concept will be used.12. Decisions (Core Elements)API call: https://diavgeia.gov.gr/luminapi/opendata/decisions/ΒΟΖΧΙ-8Ρ9 Sample XML response:<decision>    <ada>ΒΟΖΧΙ-8Ρ9</ada><subject>ΑΠΟΦΑΣΗ ΑΝΑΛΗΨΗΣ ΥΠΟΧΡΕΩΣΗΣ- ΑΠΟΦΑΣΗ ΑΝΑΛΗΨΗΣ ΥΠΟΧΡΕΩΣΗΣ    </subject>    <protocolNumber>4095</protocolNumber>    <status>PUBLISHED</status>    <versionId>4494bf19-b086-4879-954b-5b2c2787a151</versionId>    <decisionTypeId>Β.1.3</decisionTypeId>    <issueDate>2012-02-02+02:00</issueDate>    <organizationId>19</organizationId>    <unitIds>       <unitId>70567</unitId>    </unitIds>    <signerIds>       <signerId>100342</signerId>    </signerIds>    <thematicCategoryIds>       <thematicCategoryId>04</thematicCategoryId>    </thematicCategoryIds>    <submissionTimestamp>2012-02-21T10:43:47.000+02:00</submissionTimestamp>    <extraFieldValues> … </extraFieldValues> → See 24 - 29    <url>https://diavgeia.gov.gr/luminapi/api/decisions/ΒΟΖΧΙ-8Ρ9</url>    <documentUrl>       https://diavgeia.gov.gr/luminapi/api/decisions/ΒΟΖΧΙ-8Ρ9/document    </documentUrl>    <privateData>false</privateData>    <attachments></attachments>    <correctedVersionId></correctedVersionId></decision>Corresponding RDF graph:<http://linkedeconomy.org/resource/XXX/ΒΟΖΧΙ-8Ρ9> elod:ada “ΒΟΖΧΙ-8Ρ9”;        elod:decisionTypeId “YYY” (depending on the type of the decision)dc:subject “ΑΠΟΦΑΣΗ ΑΝΑΛΗΨΗΣ ΥΠΟΧΡΕΩΣΗΣ- ΑΠΟΦΑΣΗ ΑΝΑΛΗΨΗΣ ΥΠΟΧΡΕΩΣΗΣ”@el;    elod:hasProtocolNumber “4095”;    elod:decisionStatus elod-concepts:published;    elod:versionId “4494bf19-b086-4879-954b-5b2c2787a151”;    dcterms:issued “2012-02-02”;    dc:publisher <http://linkedeconomy.org/resource/OrganizationUnit/75568>;    elod:buyer <http://linkedeconomy.org/resource/OrganizationUnit/75568>;    elod:signer <http://linkedeconomy.org/resource/Signer/100342>;    elod:submissionTimestamp “2012-02-21T10:43:47.000+02:00”;    elod:thematicCategory <http://linkedeconomy.org/resource/ThematicCategory/10004>;elod:documentUrl https://diavgeia.gov.gr/luminapi/api/decisions/ΒΟΖΧΙ-8Ρ9/document”;    elod:privateData “false”.(elod:hasAttachment <http://linkedeconomy.org/resource/Attachment/{id}>.) where applicable    (elod:correctedVersionId “”) where applicable           The data of the Decisions are separated in two major categories. In the standard elements (see 12) and the decision type-specific ones (see 24 - 29). In this section the modeling of the standard ones is presented. The type-specific elements are located inside the “extraFieldValues” element.    The URI of the decision entities is in the following form: service_prefix/XXX/{Ada}. The type of the decisions depends on their decision type. Therefore the general format of the URI is presented. The modeling of the data retrieved from the “thematicCategoryIds” element is analyzed in 11.    The modeling of the organization that published the contract and its signer is presented in 1 and in 9 respectively. For modeling purposes the organization unit is set as the publisher, since the organization can be retrieved via the org:unitOf property. In case that an attachment description is provided with the decision, a resource describing it is created. The modeling architecture can be found in 17.    In case the “correctedVersionId” element exists, that means that the decision has been altered and the new version id is provided. In such a case the ADA code is maintained. Therefore we create a new URI in the form of service_prefix/XXX/{Ada}/Corrected/ {submissionTimestamp} which is related to the new corrected information.13. Decision Status        There is no API call for this entity. There are only four possible values: Published, Pending Revocation, Revoked, and Submitted.Corresponding RDF graph (example):<http://linkedeconomy.org/resource/DecisionStatus/Published> a skos:Concept, elod:DecisionStatus;    skos:prefLabel “Published and Active”@en,    skos:prefLabel “Αναρτημένη και σε ισχύ”@en.    The modeling of the “Decision Status” is based on the Concepts introduced by the SKOS vocabulary. A Concept is created for each decision status. Then we specify these to belong to another class,, named DecisionStatus. Also, the name of the represented concept is attached along with its language specification. Every time such a status is needed, its respective Concept will be used.14. CurrencyAPI call: https://diavgeia.gov.gr/luminapi/opendata/dictionaries/CURRENCYSample XML response:<item uid="EUR" label="Ευρώ"/>Corresponding RDF graph:<http://linkedeconomy.org/resource/Currency/EUR> a elod:Currency;    elod:currencyId “EUR”;    skos:prefLabel “Ευρώ”@el;    skos:prefLabel “Euro”@en.       Every price appearance is accompanied by the currency that is expressed in. Instead if simple expressing it using a literal, a resource is created that contains its details. All the currencies are set as instances of the elod:Currency class, a subclass of the skos:Concept. Every instance contains the currency code expressed in the ISO 4217 format and its official name. The URI of the currency entities is in the following form: service_prefix/Currency/{ISO_4217_id}.15. VAT Id TypeAPI call: https://diavgeia.gov.gr/luminapi/opendata/dictionaries/VAT_TYPESample XML response:<item uid="EL" label="Εθνικό"/>Corresponding RDF graph:<http://linkedeconomy.org/resource/VatType/EL> a skos:Concept, elod:VatType;    skos:prefLabel “National (Natural persons and Legal entities)”@el;    skos:prefLabel “Εθνικό (φυσικά και νομικά πρόσωπα)”@el.    The modeling of the “VAT Id Type” is based on the Concepts introduced by the SKOS vocabulary. A Concept is created for each VAT type. Then we specify these to belong to another class,, named VatType. Also, the name of the represented concept is attached along with its language specification. Every time such a vat type is needed, its respective Concept will be used.16. CountriesAPI call: https://diavgeia.gov.gr/luminapi/opendata/dictionaries/EE_MEMBERSample XML response:<item uid="EL" label="Ελλάδα"/>Corresponding RDF graph:<http://linkedeconomy.org/resource/Country/EL> a elod:Country;    elod:countryId “EL”;    skos:prefLabel “Greece”@en;    skos:prefLabel “Ελλάδα”@el.        All the countries which are retrieved from the data are set as instances of the elod:Country class, a subclass of the skos:Concept. Every instance contains the two-lettered country code expressed in the ISO 3166-1 alpha-2 format and its official name. The URI of the country entities is in the following form: service_prefix/Country/{ISO_3166-1_alpha-2_id}.17. Attachments        There is no API call for this entity. All related information is assembled from the Decision entities. An example of Decision with attachment can be found at:https://diavgeia.gov.gr/luminapi/opendata/decisions/ΒΖ8ΣΛ-2ΜΙ Sample XML response:<attachments>    <attachment>        <id>be881986-1f30-4c15-9f9b-f67d1aa233ef</id>    <description>0711_entos_edras_1.14.pdf</description>    <filename>0711_entos_edras_1.14.pdf</filename>    <mimeType>application/pdf</mimeType>    <checksum>    a5380c56bd50976d4716243d6964948d0102b3c3c942c06e2d46f0cf4a265cfd    </checksum>    </attachment></attachments>Corresponding RDF graph:<http://linkedeconomy.org/resource/Attachment/{id}> a elod:Attachment;    elod:attachmentId “be881986-1f30-4c15-9f9b-f67d1aa233ef”;    elod:attachmentDescription “0711_entos_edras_1.14.pdf’;    elod:attachmentFilename “0711_entos_edras_1.14.pdf”;    elod:attachmentMimeType “application/pdf”;elod:attachmentChecksum “a5380c56bd50976d4716243d6964948d0102b3c3c942c06e2d46f0cf 4a265cfd”.    Some Decisions (see 12) are accompanied by their attachments. The latter are modeled as instances of the elod:Attachment class. The URI of the attachment entities is in the following form: service_prefix/Attachment/{id}.18. Budget Category        There is no API call for this entity. There are only four possible values: Regular Budget, Public Investment Project, and Co-funded Project.Corresponding RDF graph (example):<http://linkedeconomy.org/resource/BudgetCategory/RegularBudget> a skos:Concept, elod:BudgetCategory;    skos:prefLabel “Regular Budget”@en;    skos:prefLabel “Τακτικός Προϋπολογισμός”@el.    The modeling of the “Budget Category” is based on the Concepts introduced by the SKOS vocabulary. A Concept is created for each budget category. Then we specify these to belong to another class,, named BudgetCategoy. Also, the name of the represented concept is attached along with its language specification. Every time such a category is needed, its respective Concept will be used.19. Procedure Contract Type        There is no API call for this entity. There are only three possible values: Open, Restricted, and Low Value.Corresponding RDF graph (example):pc-concepts:ProcedureTypeScheme a skos:ConceptScheme;    skos:hasTopConcept pc-concepts:Open.pc-concepts:Open a skos:Concept;    skos:inScheme pc-concepts:ProcedureTypeScheme;     skos:topConceptOf elod-concepts:ProcedureTypeScheme;    skos:prefLabel “Open”@en;    skos:prefLabel “Ανοικτός Διαγωνισμός”@el.    The modeling of the “Procedure Contract Type” is based on the Concepts and Concept Schemes introduced by the SKOS vocabulary. A Concept is created for each procedure contract type. Then we specify these to be contained inside a Concept Scheme, named ProcedureTypeScheme. Also, the name of the represented concept is attached along with its language specification. Every time such a procedure type is needed, its respective Concept will be used.    The “Open” and “Restricted” Concepts are contained in the “Public Contracts” ontology. We introduce and incorporate into the specified Concept Scheme a new Concept, named “Low Value”, in order to cover all the possible cases.  20. Kind of Contracts        There is no API call for this entity. There are only four possible values: Works, Services, Supplies, and Studies:Corresponding RDF graph (example):pc-concepts:KindScheme a skos:ConceptScheme;    skos:hasTopConcept pc-concepts:Works.pc-concepts:Works a skos:Concept;    skos:inScheme pc-concepts:KindScheme;    skos:topConceptOf elod-concepts:KindScheme;    skos:prefLabel “Works”@en;    skos:prefLabel “Έργα”@el.        The modeling of the “Kind of Contracts” is based on the Concepts and Concept Schemes introduced by the SKOS vocabulary. A Concept is created for each kind of contract. Then we specify these to be contained inside a Concept Scheme, named KindScheme. Also, the name of the represented concept is attached along with its language specification. Every time such a category is needed, its respective Concept will be used.    The “Services”, “Works” and “Supplies” Concepts are contained in the “Public Contracts” ontology. We introduce and incorporate into the specified Concept Scheme a new Concept, named “Studies”, in order to cover all the possible cases.21. Award Criterion        There is no API call for this entity. There are only two possible values: Lowest Price and Most Advantageous Offer.Corresponding RDF graph (example):<http://linkedeconomy.org/resource/SelectionCriterion/LowestPrice> a skos:Concept, elod:SelectionCriterion;    skos:prefLabel “ Lowest Price” @en;    skos:prefLabel “Χαμηλότερη τιμή” @el.    The modeling of the “Award Criteria” is based on the Concepts introduced by the SKOS vocabulary. A Concept is created for each award criterion. Then we specify these to belong to another class,, named SelectionCriterion. Also, the name of the represented concept is attached along with its language specification. Every time such a criterion is needed, its respective Concept will be used.22. CPVsAPI call: https://diavgeia.gov.gr/luminapi/opendata/dictionaries/CPVSample XML response:<item uid="42958000-6" label="42958000-6 - ΣΤΑΘΜΑ ΓΙΑ ΖΥΓΑΡΙΕΣ"/>Corresponding RDF graph:< http://linkedeconomy.org/resource/CPV/42958000-6> a elod:CPV;    elod:cpvCode “42958000-6”;    elod:cpvFiveDigits “42958”;    elod:cpvFourDigits “4295”;    elod:cpvThreeDigits “429”;    elod:cpvTwoDigits “42”;    elod:cpvGreekSubject “Σταθμά για ζυγαριές”;    elod:cpvEnglishSubject “Weights for weighing machines”;    elod:cpvGermanSubject “Gewichte fur Wiegemaschinen”;    elod:cpvItalianSubject “Pesi per macchine per la pesatura”;    elod:cpvSpanishSubject “Pesas para maquinas de pesaje”;    elod:cpvFrenchSubject “Poids pour machines de pesage”;    cpv:hasSuperCPVCode <http://linkedeconomy.org/resource/CPV/42000000-6>; 	    For each CPV code retrieved from the Diavgeia II API, a unique resource is created. Its URI is in the form service_prefix/CPV/{CPV_code}. Some additional information is attached regarding its name in specific languages and where applicable its super-code.23. Address details        The API of Diavgeia II does not provide any information regarding the validity of the vat ids or the address details of the organizations (see 1). Therefore we utilize an external service (http://vatid.eu). Depending on the validity of the vat id and whether it refers to a Physical Person or to a Legal Entity more information regarding the address is returned. The last properties are used for modeling that kind of information.    External API call: http://vatid.eu/check/EL/090169846XML response:<response><country-code>EL</country-code><vat-number>090169846</vat-number><valid>true</valid><name>ΥΠΟΥΡΓΕΙΟ ΔΗΜΟΣΙΑΣ ΤΑΞΗΣ ΚΑΙ  ΠΡΟΣΤΑΣΙΑΣ ΤΟΥ ΠΟΛΙΤΗ</name><address>ΚΑΝΕΛΛΟΠΟΥΛΟΥ 4 11525 - ΑΘΗΝΑ</address></response>Corresponding RDF graph (example):< http://linkedeconomy.org/resource/Address/090169846> a vcard2006:Address;    vcard2006:country-name “Ελλάδα”@el;    vcard2006:locality “ΑΘΗΝΑ”@el;    vcard2006:street-address “ΚΑΝΕΛΛΟΠΟΥΛΟΥ 4”@el;    vcard2006:postal-code “11525”.    The address information is modeled as instance of the vcard2006:Address class. The URI of the address entities are in the following form: service_prefix/Address/{vat_id} or service_prefix/Address/{vat_id}/{org_id} depending on the format of the URI of the respective organization. The remaining information returned by that service (validity of vat id, legal name and country registered at) is modeled as presented in 124. Decision Type B.1.3API call: https://diavgeia.gov.gr/luminapi/opendata/search?type=Β.1.3Sample XML response: (only the decision type-specific elements are presented)<extraFieldValues>    <str value="ΠΡΑΞΗ" name="documentType"/>    <int value="2014" name="financialYear"/>    <bool value="false" name="recalledExpenseDecision"/>    <str value="Τακτικός Προϋπολογισμός" name="budgettype"/>    <obj name="amountWithVAT">    <num value="1746.6" name="amount"/>    <str value="EUR" name="currency"/>    </obj>    <list name="amountWithKae">    <obj>    <obj name="sponsorAFMName">    <str value="099505250" name="afm"/>    <str value="EL" name="afmType"/>    <str value="EL" name="afmCountry"/>    <bool value="true" name="enterName"/>    <str value="ΕΘΝΙΚΟ ΑΘΛΗΤΙΚΟ ΚΕΝΤΡΟ ΧΑΝΙΩΝ" name="name"/>    </obj>    <str value="1899α" name="kae"/>    <num value="397.64" name="amountWithVAT"/>    <num value="7489.18" name="kaeBudgetRemainder"/>    </obj>    </list>    <bool value="false" name="partialead"/>    <list name="relatedDecisions"/></extraFieldValues>Corresponding RDF graph: (assuming an item with ADA 63054690ΒΒ-1ΜΣ)<http://linkedeconomy.org/resource/CommittedItem/63054690ΒΒ-1ΜΣ> a elod:CommittedItem;        elod:decisionTypeId “B.1.3”;        elod:documentType “ΠΡΑΞΗ”;    elod:hasBudgetCategory elod-concepts:RegularBudget;    elod:financialYear “2014”^^xsd:year;    elod:isRecalledExpenseDecision “false”^^xsd:boolean;    elod:isPartialWithdrawal “false”^^xsd:boolean;    elod:price [ a gr:UnitPriceSpecification;       elod:hasCurrency <http://linkedeconomy.org/resource/Currency/EUR>;   	gr:hasCurrencyValue "1746.6"^^xsd:float;   	gr:valueAddedTaxIncluded “true”^^xsd:Boolean    ];    elod:hasExpenditureLine [ a elod:ExpenditureLine;    elod:seller <http://linkedeconomy.org/resource/Organization/099505250>;    elod:hasKae <http://linkedeconomy.org/resource/KaeCodes/1899α>;    elod:amount [ a gr:UnitPriceSpecification;       elod:hasCurrency <http://linkedeconomy.org/resource/Currency/EUR>;      	gr:hasCurrencyValue "397.64"^^xsd:float;       gr:valueAddedTaxIncluded “true”^^xsd:boolean.    ];    elod:remainingBudgetAmount [ a gr:UnitPriceSpecification;       elod:hasCurrency <http://linkedeconomy.org/resource/Currency/EUR>; 	gr:hasCurrencyValue "7489.18"^^xsd:float;       gr:valueAddedTaxIncluded “true”^^xsd:boolean.    ];    elod:remainingCreditAmount [       … (just as in the modeling of  “elod:remainingBudgetAmount”)    ]    ].<http://linkedeconomy.org/resource/Organization/099505250> a foaf:Organization, org:Organization, gr:BusinessEntity, rov:RegistredOrganization;    elod:hasVatType <http://publicspending.net/resource/VatType/EL>;    elod:country <http://publicspending.net/resource/Country/EL>;    gr:vatID “099505250”;    gr:name “ΕΘΝΙΚΟ ΑΘΛΗΤΙΚΟ ΚΕΝΤΡΟ ΧΑΝΙΩΝ”@el;    elod:validVatId “true”;    gr:legalName “ ΕΘΝΙΚΟ ΑΘΛΗΤΙΚΟ ΚΕΝΤΡΟ ΧΑΝΙΩΝ”@el;    vcard2006:hasAddress <http://linkedeconomy.org/resource/Address/099505250>.       The decisions whose type is of “B.1.3” belong to the first step of the contract phase cycle. Therefore they are created as instances of the elod:ComittedItem class. Their URI is in the following form: service_prefix/ComittedItem/{ADA}. The modeling of the data retrieved from the “budgettype” is analyzed in 18.    The decisions contain a complex element describing the amount, named “amountWithVAT”. Its modeling is achieved by creating an instance of the gr:UnitPriceSpecification class. Two properties are used to express the amount and its currency. A third property (gr:valueAddedTaxIncluded) is used in order to express whether the amount includes the VAT or not.    Another complex field is the “amountWithKae”. It specifies how the amount is divided per “Seller” and “KAE”. The “Sellers” are modeled as instances of the Organization class, using the URI service_prefix/Organization/{afm}. All the related information is attached to the instance through the corresponding properties. The modeling of the data retrieved from the “afmType” is analyzed in 15.    It should be noted that there are cases were the “Seller” entity is not a Legal Entity, but a Physical Person. In such cases the it is modeled using the “foaf:Person” class and the form of the URI used is service_prefix/Person/{afm}.    The information included in the “amountWithVAT”, “kaeCreditRemainder” and “kaeBudgetRemainder” elements is modeled using the gr:UnitPriceSpecification class, as described earlier about the “amountWithVAT” element.    The modeling of the “relatedPartialADA” and of the “relatedDecisionsADA” elements are described in 30.25. Decision Type B.2.1API call: https://diavgeia.gov.gr/luminapi/opendata/search?type=Β.2.1Sample XML response: (only the decision type-specific elements are presented)<extraFieldValues>	    	<str value="ΠΡΑΞΗ" name="documentType" />    	<list name="sponsor">       <obj>       <obj name="sponsorAFMName">    <str value="055812251" name="afm" />    <str value="EL" name="afmType" />    <str value="EL" name="afmCountry" />    <bool value="false" name="enterName" /><str value="ΚΑΡΑΠΑΤΑΚΗ,,ΕΜΜΑΝΩΛΙΑ,ΒΑΣΙΛΕΙΟΣ" name="name" />               	</obj>                	<obj name="expenseAmount">      <num value="36.34" name="amount" />      <str value="EUR" name="currency" />                 	</obj>                 	<str value="63510000-7" name="cpv" />                 	<str value="2009ΣΕ01980013" name="kae" />          </obj>    	</list>    	<obj name="org">        		<str value="090166291" name="afm" />        		<str value="EL" name="afmType" />        		<bool value="false" name="enterName" />        		<str value="ΥΠΟΥΡΓΕΙΟ ΕΘΝΙΚΗΣ ΟΙΚΟΝΟΜΙΑΣ" name="name" />    	</obj>    	<list name="relatedDecisions">        	      <obj>             		<str value="ΒΙΡΥΦ-ΞΣΙ" name="relatedDecisionsADA" />  </obj>    	</list>    	<list name="relatedAnalipsiYpoxreosis">         <obj>      <str value="ΒΙΨΒ9-4Υ6" name="textRelatedADA"/>   </obj>       </list></extraFieldValues>Corresponding RDF graph: (assuming an item with ADA 773ΨΦ-8Η5)<http://linkedeconomy.org/resource/ExpenseApprovalItem/773ΨΦ-8Η5> a elod:ExpenseApprovalItem;        elod:decisionTypeId “B.2.1”;        elod:documentType “ΠΡΑΞΗ”;    elod:buyer <http://linkedeconomy.org/resource/Organization/090166291>;    elod:hasExpenditureLine [ a elod:ExpenditureLine;    elod:seller <http://linkedeconomy.org/resource/Organization/055812251>;    elod:hasKae <http://linkedeconomy.org/resource/KaeCodes/2009ΣΕ01980013>;    elod:hasCPV <http://publicspending.net/resource/CPV/50750000-7>.    elod:amount [ a gr:UnitPriceSpecification;   		elod:hasCurrency <http://linkedeconomy.org/resource/Currency/EUR>; 		gr:hasCurrencyValue "36.34"^^xsd:float;    gr:valueAddedTaxIncluded “true”^^xsd:boolean.    ];    ]    The decisions whose type is of “B.2.1” belong to the second step of the contract phase cycle. Therefore they are created as instances of the elod:ExpenseApprovalItem class. Their URI is in the following form: service_prefix/ExpenseApprovalItem/{ADA}.    The decisions contain two basic complex fields describing the “Buyer” and the “Seller”. Their modeling is identical to the one presented in 24, regarding the “Seller”. These decision types contain a complex element describing the amount, named “expenseAmount”. Its modeling is identical to the one presented in 24, named “amountWithVAT”.    The “sponsor” element is a complex one and specifies the approved amounts per Seller and the corresponding KAE and CPV codes. The CPV codes are related with the decision through the “elod:hasCPV” property. An important notice is that the property pc:mainObject (see 27) cannot be used in this case, as it has a pc:Contract as domain. The modeling of the “relatedPartialADA” and of the “relatedDecisionsADA” elements are described in 30.26. Decision Type B.2.2API call: https://diavgeia.gov.gr/luminapi/opendata/search?type=Β.2.2Sample XML response: (only the decision type-specific elements are presented)<extraFieldValues>    <str value="ΠΡΑΞΗ" name="documentType"/>    <list name="sponsor">    <obj>    <obj name="sponsorAFMName">    <str value="040391338" name="afm"/>    <str value="EL" name="afmType"/>    <str value="EL" name="afmCountry"/>    <bool value="true" name="enterName"/>    <str value="ΧΑΤΖΗΠΑΝΑΓΙΩΤΙΔΟΥ ΣΟΦΙΑ" name="name"/>    </obj>    <obj name="expenseAmount">    <num value="171.56" name="amount"/>    <str value="EUR" name="currency"/>    </obj>    <str value="30192700-8" name="cpv"/>    <str value="15.6612.0001" name="kae"/>    </obj>    </list>    <obj name="org">    <str value="099041308" name="afm"/>    <str value="EL" name="afmType"/>    <bool value="true" name="enterName"/><str value="ΚΕΝΤΡΟ ΔΡΑΣΤΗΡΙΟΤΗΤΑΣ ΚΟΙΝΩΝΙΚΗΣ ΠΡΟΣΤΑΣΙΑΣ ΠΑΙΔΙΩΝ ΚΑΙ ΝΕΩΝ  ΝΕΑΣ ΣΜΥΡΝΗΣ ΕΘΝΙΚΗ ΣΤΕΓΗ ΝΠΔΔ ΣΤΟ ΔΗΜΟ ΝΕΑΣ ΣΜΥΡΝΗΣ" name="name"/>    </obj>    <list name="relatedEkgrisiDapanis"/>    <list name="relatedDecisions"/></extraFieldValues>Corresponding RDF graph: (assuming an item with ADA 7ΡΧΡΟΕ5Ε-Λ96)<http://linkedeconomy.org/resource/Payment/7ΡΧΡΟΕ5Ε-Λ96> a elod:SpendingItem;    … (just as in the modeling of 25)        The decisions whose type is of “B.2.2” belong to the third step of the contract phase cycle. Therefore they are created as instances of the elod:SpendingItem class. Their URI is in the following form: service_prefix/SpendingItem/{ADA}. The rest of the modeling of that decision type is identical to the one presented in 25.27. Decision Type Δ.1API Call: https://diavgeia.gov.gr/luminapi/opendata/search?type=Δ.1	Sample XML response: (only the decision type-specific elements are presented)<extraFieldValues>    <obj name="awardAmount">    <num value="262.73" name="amount"/>    <str value="EUR" name="currency"/>    </obj>    <obj name="person">    <str value="094289349" name="afm"/>    <str value="EL" name="afmType"/>    <bool value="true" name="enterName"/>    </obj>    <list name="cpv">    <str value="45320000-6"/>    </list>    <str value="ΠΡΑΞΗ" name="documentType"/>    <str value="Προμήθειες" name="assignmentType"/>    <list name="relatedDecisions"/></extraFieldValues>Corresponding RDF graph: (assuming an item with ADA ΒΣΔΒ4690Ω5-ΦΤΚ)<http://linkedeconomy.org/resource/Contract/ΒΣΔΒ4690Ω5-ΦΤΚ> a pc:Contract;        elod:decisionTypeId “Δ.1”;        elod:documentType “ΠΡΑΞΗ”;    pc:procedureType <http://linkedeconomy.org/ontology#Supplies>;    elod:seller <http://linkedeconomy.org/resource/Organization/094289349>;    ?contract pc:mainObject < http://linkedeconomy.org/resource/CPV/45320000-6>    pc:agreedPrice [a gr:UnitPriceSpecification; 		elod:hasCurrency <http://linkedeconomy.org/resource/Currency/EUR>;gr:hasCurrencyValue "262.73"^^xsd:float;gr:valueAddedTaxIncluded “true”^^xsd:boolean.    ].	    The decisions whose type is of “Δ.1” belong to the fourth step of the contract phase cycle. Therefore they are created as instances of the pc:Contract class. Their URI is in the following form: service_prefix/Contract/{ADA}.     The CPV codes are related with the decision through the “pc:mainObject” property. In case that more than one CPV codes are present, the pc:additionalObject is used to relate the rest of them with the decision.     The decisions contain a complex element describing the amount, named “awardAmount”. Its modeling is identical to the one presented in 25, named “amountWithVAT”. The element named “person” denotes the “Seller”. Its modeling is identical to the one presented in 25, regarding the “Seller”. The modeling of the data retrieved from the “assignmentType” is analyzed in 19. The modeling of the “relatedPartialADA” and of the “relatedDecisionsADA” elements are described in 30.28. Decision Type Δ.2.1API Call: https://diavgeia.gov.gr/luminapi/opendata/search?type=Δ.2.1Sample XML response: (only the decision type-specific elements are presented)<extraFieldValues>    <obj name="estimatedAmount">    <num value="2276.42" name="amount"/>    <str value="EUR" name="currency"/>    </obj>    <str value="ΠΡΑΞΗ" name="documentType"/>    <str value="Συγχρηματοδοτούμενο Έργο" name="orgBudgetCode"/>    <str value="Πρόχειρος" name="contestProgressType"/>    <list name="cpv">    <str value="63711200-8"/>    <str value="42958000-6"/>    </list>    <str value="Υπηρεσίες" name="manifestContractType"/>    <str value="Χαμηλότερη Τιμή" name="manifestSelectionCriterion"/>    <str value="Β55ΒΟΚΝ6-ΠΓ1" name="textRelatedADA"/>    <list name="relatedDecisions">    <obj>       <str value="ΒΝΑΔΟΡ05-ΚΨΝ" name="relatedDecisionsADA"/>    </obj>    </list></extraFieldValues>Corresponding RDF graph:  (assuming an item with ADA ΩΠΑ1ΟΡ9Τ-Β4Γ)<http://linkedeconomy.org/resource/Contract/ΩΠΑ1ΟΡ9Τ-Β4Γ> a pc:Contract;        elod:decisionTypeId “Δ.2.1”;        elod:documentType “ΠΡΑΞΗ”;    pc:procedureType <http://linkedeconomy.org/ontology#Negotiated>;    pc:kind <http://purl.org/procurement/public-contracts#Services>;    pc:mainObject <http://publicspending.net/resource/cpvCodes/63711200-8>;    pc:additionalObject <http://publicspending.net/resource/cpvCodes/42958000-6>;    pc:documentsPrice [ a gr:UnitPriceSpecification;          elod:hasCurrency <http://linkedeconomy.org/resource/Currency/EUR>;gr:hasCurrencyValue "2276.42"^^xsd:float;gr:valueAddedTaxIncluded “false”^^xsd:boolean.    ];    pc:awardCriteriaCombination [ a pc:AwardCriteriaCombination;    pc:awardCriterion [ a pc:CriterionWeighting;    pc:weightedCriterion elod-concepts:LowestPrice;    pc:criterionWeight “100”^^pcdt:percentage;      ].    ].    The decisions whose type is of “Δ.2.1” belong to the fifth step of the contract phase cycle. Therefore they are created as instances of the pc:Contract class. Their URI is in the following form: service_prefix/Contract/{ADA}.     The decisions contain a complex element describing the amount, named “estimatedAmount”. Its modeling is identical to the one presented in 25, named “amountWithVAT”. The only difference is that this price does not contain any Vat. The modeling of the data retrieved from the “contestProgressType”, “orgBudgetCode” and “manifestContractType” elements are analyzed in 19, 18 and 20 respectively. The modeling of the “relatedPartialADA” and of the “relatedDecisionsADA” elements are described in 30.    The CPV codes are related with the decision through the “pc:mainObject” property. In case that more than one CPV codes are present, the pc:additionalObject is used to relate the rest of them with the decision.     The modeling of the “manifestSelectionCriterion” element is as follows: initially, its value is represented through a SKOS Concept (see 21). There are usually award criteria which specify the conditions under which the best tender will be selected and awarded. The set of criteria is represented as an instance of the class pc:AwardCriteriaCombination and is assigned to the contract with the property pc:awardCriteriaCombination. Each weighted criterion is then represented as an instance of the class pc:CriterionWeighting and is assigned to the set through the pc:awardCriterion property. The pc:CriterionWeighting class has two properties: pc:weightedCriterion and pc:criterionWeight. The former property attaches the criterion that is weighted and the other property specifies the criterion weight for tender evaluation.29. Decision Type Δ.2.2API call: https://diavgeia.gov.gr/luminapi/opendata/search?type=Δ.2.2	Sample XML response: (only the decision type-specific elements are presented)<extraFieldValues>    <obj name="awardAmount">    <num value="58700.0" name="amount"/>    <str value="EUR" name="currency"/>    </obj>    <obj name="person">    <str value="998831246" name="afm"/>    <str value="EL" name="afmType"/>    <bool value="false" name="enterName"/>    <str value="ΓΑΡΑΝΤΖΙΩΤΗΣ Γ ΚΑΙ ΣΙΑ ΕΕ" name="name"/>    </obj>    <str value="ΠΡΑΞΗ" name="documentType"/>    <str value="ΒΙΦ8ΩΛΘ-8ΚΚ" name="textRelatedADA"/>    <list name="relatedDecisions">    <obj>    <str value="ΒΙΙΠΟΛΚ8-ΜΙΝ" name="relatedDecisionsADA"/>    </obj>    </list></extraFieldValues>Corresponding RDF graph: (assuming an item with ADA Ω3ΙΔΟΡΛΟ-ΦΤΕ)<http://linkedeconomy.org/resource/Contract/Ω3ΙΔΟΡΛΟ-ΦΤΕ> a pc:Contract;        elod:decisionTypeId “Δ.2.2”;        elod:documentType “ΠΡΑΞΗ”;    pc:actualPrice [ a gr:UnitPriceSpecification;elod:hasCurrency <http://linkedeconomy.org/resource/Currency/EUR>;gr:hasCurrencyValue "58700.0"^^xsd:float;gr:valueAddedTaxIncluded “true”^^xsd:boolean.    ];    elod:seller <http://linkedeconomy.org/resource/Organization/998831246>.    The decisions whose type is of “Δ.2.2” belong to the last step of the contract phase cycle. Therefore they are created as instances of the pc:Contract class. Their URI is in the following form: service_prefix/Contract/{ADA}.     The decisions contain two complex elements describing the amount and the awarder entity, named “estimatedAmount” and “person” respectively. Regarding the former, its modeling is identical to the one presented in 25, named “amountWithVAT”. The modeling of the latter is identical to the one presented in 25, regarding the “Seller”. The modeling of the “relatedPartialADA” and of the “relatedDecisionsADA” elements are described in 30.30. Related Decisions        There are cases where a decision can be related to others. This information is contained in the textRelatedADA and relatedDecisionsADA fields. When such a relationship is found, it has to be modeled. That modeling is dependent on their decision types (see 24 - 29). Therefore a new request has to be made to the Diavgeia II API in order to retrieve the necessary information. In the following table the possible relationships of the decisions can be found. Decision TypeRelated Decision TypeConnected with PropertyInstance of ClassB.1.3B.1.3elod:relatedCommittedItemelod:CommittedItemB.2.1B.1.3elod:relatedCommittedItemelod:CommittedItemB.2.2B.2.1elod:relatedExpenseApprovalItemelod:ExpenseApprovalItemB.2.2B.1.3elod:relatedCommittedItemelod:CommittedItemΔ.1B.1.3elod:relatedCommittedItemelod:CommittedItemΔ.2.1B.1.3elod:relatedCommittedItemelod:CommittedItemΔ.2.2Δ.2.1elod:relatedContractelod:ContractAnyOther Typeelod:relatedDecisionelod:Decision    The first column of the table, named “Decision Type”, presents the decision types under investigation. The second column presents the possible types of their related decisions. The two last columns present the property that connects these decisions and the class that the related decision is an instance of. In case that decisions are related to others that do not belong to one of the six examined types, then these will be modeled as instances of the general class elod:Decision.Sample RDF graph: (assuming a decision type “Δ.2.2” with ADA Ω3ΙΔΟΡΛΟ-ΦΤΕ which relates to a decision type “Δ.2.1” with ADA ΩΠΑ1ΟΡ9Τ-Β4Γ and to a decision of other type with ADA 735ΨΓ-9Σ1)<http://linkedeconomy.org/resource/Contract/Ω3ΙΔΟΡΛΟ-ΦΤΕ> a pc:Contract;elod:relatedContract <http://linkedeconomy.org/resource/Contract/ΩΠΑ1ΟΡ9Τ-Β4Γ>;    elod:relatedDecision <http://linkedeconomy.org/resource/Decision/735ΨΓ-9Σ1>.The OWL model    In this section the classes, the object and datatype properties of the proposed ontology are presented and described. In the RDF representation a number of specific namespaces is used. The following table presents them along with their prefixes and the Ontology or the Vocabulary they belong to.PrefixURIOntology / Vocabularyrdfhttp://www.w3.org/1999/02/22-rdf-syntax-ns#RDFrdfshttp://www.w3.org/2000/01/rdf-schema#RDFSxsdhttp://www.w3.org/2001/XMLSchema#XSDgrhttp://purl.org/goodrelations/v1#Good Relationspchttp://purl.org/procurement/public-contracts#Public Contractsfoafhttp://xmlns.com/foaf/0.1/#FOAForghttp://www.w3.org/ns/org#Organizationrovhttp://www.w3.org/ns/regorg#Registered Organizationdchttp://purl.org/dc/elements/1.1/Dublin Coredctermshttp://purl.org/dc/terms#Dublin Core termsvcardhttp://www.w3.org/2006/vcard/ns#vCardskoshttp://www.w3.org/2004/02/skos/core#SKOSelodhttp://linkedeconomy.org/ontology#Linked Economy            1. ClassesLinked Economy• elod:Currency: This class represents currencies.• elod:Country: This class represents countries.• elod:CPV: This class represents the CPV codes. It is a vocabulary which is used to characterize the products or services purchased by a contract.• elod:CommittedItem: This class represents decisions having type B.1.3.• elod:Decision: This class represents decisions having other type than B.1.3, B.2.1, B.2.2, Δ.1, Δ.2.1, Δ.2.2.• elod:Fek: This class represents the Greek Government Gazette issues.• elod:FekType: This class represents the types of the Greek Government Gazette issues.• elod:ExpenditureLine: This class represents decisions that involve expenses.• elod:SpendingItem: This class represents decisions that involve spending actions.• elod:ExpenseApprovalItem: This class represents decisions that involve approval of expenses.• elod:Attachment: This class represents the Attachments documents found in the Decisions.• elod:OrganizationalUnitCategory: This class represents the categories of the Organizational Units.• elod:KAE: This class represents the Kae codes.• elod:ThematicCategory: This class represents the Thematic Categories.• elod:VatType: This class represents the Vat Types of the Organizations.• elod:DecisionStatus: This class represents the Statuses of the Decisions.• elod:OrganizationStatus This class represents the Statuses of the Organizations.• elod:OrganizationDomain: This class represents the Domains of the Organizations.• elod:OrganizationCategory: This class represents the Categories of the Organizations.• elod:SelectionCriterion: This class represents the Criteria that a Contract has been selected.• elod:BudgetCategory: This class represents the Budget Categories.FOAF• foaf:Organization: This class represents the organization. It is one of the four classes used for their modeling.• foaf:Person: This class represents Physical Persons.• foaf:Agent: This class represents the entities that participate in actions.Good Relations• gr:BusinessEntity: This class represents the organization. It is one of the four classes used for their modeling.• gr:UnitPriceSpecification: This class represents is a conceptual entity that specifies the price asked for a service or product. It specifies the price, the currency and whether the price includes VAT or not.Public Contracts• pc:Contract: This class represents public contracts during all stages of their existence.• pc:CriterionWeighting: This class represents the award criterion of a public contract.• pc:AwardCriteriaCombination: This class represents the criteria which specify conditions under which the best tender will be selected and awarded.Organization• org:Organization: This class represents the organization. It is one of the four classes used for their modeling.• org:OrganizationalUnit: This class represents the organizational units.• org:Role: This class represents the Role that the Agent plays in a Membership relationship with an Organization.• org:Membership: This class represents an n-ary relationship between an Agent, an Organization and a Role.Registered Organization• rov:RegisteredOrganization: This class represents the organization. It is one of the four classes used for their modeling.vCard• vcard:Address: This class represents the address details of an agent.SKOS• skos:Concept: This class represents the units of thought - ideas, meanings, or (categories of) objects and events - which underlie many knowledge organization systems.• skos:ConceptScheme: This class represents a collection of skos:Concept as means of representing knowledge.    2. Object PropertiesLinked Economy• elod:relatedFek: This property relates a Fek issue with an Organization.• elod:fekIssue: This property relates a Fek issue with a Fek type.• elod:decisionStatus: This property defines the Status of a Decision.• elod:hasThematicCategory: This property defines the Thematic Category of a Decision. • elod:hasOrgUnitCategory: This property defines the Category of an org:OrganizationalUnit. • elod:hasExpenditureLine: This property relates a part of a payment with an elod:ExpenditureLine.• elod:hasAttachment: This property relates a Decision with an attached document.• elod:hasRelatedCommittedItem: This property relates an elod:CommittedItem, a pc:Contract or an elod:SpendingItem to an elod:CommittedItem.• elod:hasRelatedExpenseApprovalItem: This property relates an elod:CommittedItem, an elod:ExpenseApprovalItem or an elod:SpendingItem to an elod:ExpenseApprovalItem.• elod:hasRelatedContract: This property relates an an elod:CommittedItem, an elod:ExpenseApprovalItem or a pc:Contract to a pc:Contract.• elod:hasRelatedDecision: This property relates elod:CommittedItem, a pc:Contract or an elod:SpendingItem to an elod:Decision.• elod:hasRelatedSpendingItem: This property relates an elod:ExpenseApprovalItem to an elod:SpendingItem.• elod:hasCorrectedDecision: This property relates any type of Decision to a one of same type.• elod isRegisteredAt: This property relates an Agent with the Country being registered at.• elod:signer: This property links a Decision with the Signer who signed it.• elod:hasBudgetCategory: This property defines the Budget Category relating to the Decision.• elod:price: This property links an “elod:CommittedItem” with a “gr:UnitPriceSpecification”.• elod:hasKae: This property links a KAE code with an “elod:ExpenditureLine”.• elod:amount: This property links an “elod:ExpenditureLine” with a “gr:UnitPriceSpecification”.• elod:remainingBudgetAmount: This property links an “elod:ExpenditureLine” with a “gr:UnitPriceSpecification”.• elod:remainingCreditAmount: This property links an “elod:ExpenditureLine” with a “gr:UnitPriceSpecification”.• elod:hasVatType: This property links an Organization with a SKOS concept that represents the category of its vat id.• elod:buyer: This property links an Organization or an org:OrganizationalUnit with a Decision.• elod:seller: This property links an Organization, an org:OrganizationalUnit or a foaf:Person with a Decision.• elod:hasCurrency: This property defines the Currency for the prices specified by an instance of the “gr:UnitPriceSpecification”.• elod:hasCPV: The contracts are associated with CPV codes. This property links them with instances of classes other than “Contracts”.• elod:hasSupervisorOrganization: This property links an Organization with its supervisor one.Public Contracts• pc:mainObject: The Contracts are associated with CPV codes. This property defines the first of these codes as the main object.• pc:additionalObject: The Contracts are associated with CPV codes. This property defines these codes excluding the first of them as additional objects.• pc:awardCriteriaCombination: This property links a set of Criteria to a public Contract.• pc:awardCriterion: This property relates a pc:AwardCriteriaCombination to a weighted criterion.• pc:weightedCriterion: This property relates an Award Criterion to a criterion that is weighted.• pc:documentsPrice: A public contract has usually an estimated price specified before tenders are received. It may be an exact estimated price or a range comprising minimal and maximal estimated price. In both cases, the price is linked to the contract via this property.• pc:actualPrice: This property links the actual price of a Contract, after it has been  realized, with the corresponding Contract.• pc:agreedPrice: After a tender is awarded a Contract, a price is agreed between the awarded supplier and the contracting authority. This property assigns that price is assigned to the Contract.• pc:procedureType: This property specifies the procedure which determines how information about a Contract is published and how a supplier is chosen.• pc:kind: This property specifies the basic focus of a Contract.Organization• org:unitOf: Indicates an Organization of which this Unit is a part• org:hasUnit: Indicates a Unit which is part of this Organization.• org:role: Indicates the Role that the Agent plays in a Membership relationship with an Organization.• org:hasMember: Indicates an Agent (Person or other Organization) who is a member of the subject Organization.• org:member: Indicates the Person (or other Agent including Organization) involved in the Membership relationship.• org:organization: Indicates the Organization in which the Agent is a member.Registered Organization• rov:orgActivity: This property defines the domain of responsibility of an Organization.• rov:orgStatus: This property defines the operational status of an Organization.• rov:orgCategory: This property defines the category of an Organization.vCard• vcard:hasAddress: This property relates an Organization with a vcard:Address class containing its address information.SKOS• skos:hasTopConcept: This property is used to link a SKOS Concept Scheme to the SKOS concept(s) which are topmost in the hierarchical relations for that Scheme.• skos:inScheme: This property is used to express that a SKOS Concept takes part in a Concept Scheme.• skos:topConceptOf: This property is the inverse of the “skos:hasTopConcept”.• skos:broader: This property provides hierarchical link between two Concepts and indicates that one is in some way more general ("broader") than the other ("narrower").• skos:narrower: This property provides hierarchical link between two Concepts and indicates that one is in some way more specific ("narrower") than the other ("broader").Dublin Core• dc:publisher: This property links a Decision with the entity responsible for making it available.3. Datatype PropertiesLinked Economy• elod:organizationId: The unique id of an Organization.• elod:abbreviation: The abbreviated name of an Organization. It may be accompanied with a language indicator.• elod:website: The web page of an entity.• elod:odeManagerEmail: A user’s e-mail address.• elod:fekNumber: The number of a FEK issue.• elod:fekYear: The number of a FEK issue.• elod:fekTypeId: The type id of a FEK issue.• elod:signerId: The unique id of a Signer.• elod:signerActive: Indicates whether the Signer is still active or not.• elod:ada: The ADA code of a Decision.• elod:noVatOrgId: The protocol number of a decision.• elod:versionId: Indicates whether the Organization is a one without vat Id.• elod:submissionTimestamp: The date a Decision was inserted into the system.• elod:documentUrl: The URL address of the PDF file of a Decision.• elod:privateData: Indicates whether a Decision contains private data or not.• elod:currencyId: The code of a Currency expressed in the ISO 4217 format.• elod:countryId: The two-lettered code of the Country expressed in the ISO 3166-1 alpha-2 format.• elod: attachmentId: The unique id of the attached document.• elod: attachmentDescription: The description of the attached document.• elod: attachmentFilename: The name of the file of the attached document.• elod: attachmentMimeType: The mime type of the attached document.• elod: attachmentChecksum: The checksum of the attached document.• elod:financialYear: The financial year that the Decision concerns.• elod:isRecalledExpenseDecision: Indicates whether the Decision involves the recalling of expenses.• elod:isPartialWithdrawal: Indicates whether the Decision involves the partial withdrawal of expenses• elod:validVatId: Whether the provided vat id is valid or not.• elod:protocolNumber: The protocol number of a Decision.• elod:decisionTypeId: The type if of a Decision• elod:versionId: The version id of a Decision.• elod:correctedVersionId: The corrected version id of a Decision.• elod:url: The URL of the document regarding  the Decision.• elod:documentChecksum: The checksum the document regarding  the Decision.• elod:organizationWebsite: The website address of an Organization.• elod:signerOrgSignRights: Indicated whether the Signer has signature rights for the whole Organization.• elod:organizationUnitId: The id of an Organizational Unit.• elod:organizationUnitAbbreviation: The abbreviation of an Organizational Unit.• elod:documentType: The type of a Decision• elod:entryNumber: The entry number of a Decision.Public Contracts• pc:criterionWeight: The weight awarded on a specific Criterion.FOAF• foaf:firstName: The first name of an instance of the class foaf:Person.• foaf:lastName: The last name of an instance of the class foaf:Person.Good Relations• gr:hasCurrencyValue: The amount of money specified in the contract.• gr:valueAddedTaxIncluded: Indicates whether the VAT is included in the price specified in the decision or not.• gr:name: The name of an organization. It may be accompanied with a language indicator.• gr:vatID: The VAT number of an entity.• gr:legalName: The legal name of an organization. It may be accompanied with a language indicator.• gr:hasCurrencyValue: The amount of money specified in the contract.• gr:valueAddedTaxIncluded: Indicates whether the VAT is included in the price specified in the contract or not.• gr:vatID: The vat id of the agent.vCard• vcard:street-address: The street name and number of the address.• vcard:locality : The region of the described address.• vcard:country-name : The name of the country of the described address.• vcard:postal-code : The postal code of the described address.SKOS• skos:prefLabel: This property provides the preferred lexical label for a resource, in a given language.Dublin Core• dc:subject: The subject of the pc:Contract.Dublin Core Terms• dcterms:issued: The issue date of a decision.   1 http://www.foaf-project.org/2  http://purl.org/goodrelations/3 https://code.google.com/p/public-contracts-ontology/4 http://www.w3.org/TR/vocab-org/5 http://www.w3.org/TR/vocab-regorg/6 http://dublincore.org/7 http://www.w3.org/2004/02/skos/--------------------------------------------------------------------------------------------------------------2